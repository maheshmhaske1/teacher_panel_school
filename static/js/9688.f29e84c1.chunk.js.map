{"version":3,"file":"static/js/9688.f29e84c1.chunk.js","mappings":"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","sources":["utility/api.js","views/exam/ExamWidget.js","views/exam/AddStudent.js","views/exam/CertificateGenerator.js","views/exam/ExamInfo.js","views/ownComponent/DataTable.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n\nconst BASE_URL = 'http://localhost:5000'\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Add the token to the headers if it exists in cookies\nconst setAuthorizationHeader = () => {\n  const bearerToken = Cookies.get('accessToken')\n  if (bearerToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${bearerToken}`\n  }\n}\n\n// Call this function to set the Authorization header\nsetAuthorizationHeader()\n\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      window.location.href = '/admin-login'\n    }\n    return Promise.reject(error);\n  }\n);\n\n// --------loginUser-----------//\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher/login`, userData)\n    if (response.data.success) {\n      // set token\n      const accessToken = response.data.data.token\n      // set the access token in cookie\n      Cookies.set('accessToken', accessToken, { secure: true, sameSite: 'strict' })\n\n      // set token\n      const name = response.data.data.teacherData.name\n      // set the access token in cookie\n      Cookies.set('name', name, { secure: true, sameSite: 'strict' })\n\n      const id = response.data.data.teacherData._id\n      Cookies.set('adminId', id, { secure: true, sameSite: 'strict' })\n\n      const orgId = response.data.data.teacherData.organization_id\n      Cookies.set('organizationId', orgId, { secure: true, sameSite: 'strict' })\n\n      setAuthorizationHeader();\n    }\n    return response.data\n  } catch (error) {\n    console.log(\"error\", error)\n    throw error\n  }\n}\n\n// --------renderOrganizationData-----------//\nexport const renderOrganizationData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderOrganizationById-----------//\nexport const renderOrganizationById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addOrganization-----------//\nexport const addOrganization = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/organization`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteOrganizationData--------\nexport const deleteOrganizationData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editOrganization = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/organization/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// renderTeacherData\nexport const renderTeacherData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// renderTeacherByOrganization\nexport const renderTeacherByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/teacher/by-organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addTeacher-----------//\nexport const addTeacher = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/teacher`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteTeacherData--------\nexport const deleteTeacherData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/teacher/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editOrganization---------//\nexport const editTeacher = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/teacher/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderLevelData-----------//\nexport const renderLevelData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/levels`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addLevel-----------//\nexport const addLevel = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/levels`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteLevelData--------\nexport const deleteLevelData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/levels/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editLevel---------//\nexport const editLevel = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/levels/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n\n// --------renderQuestionData-----------//\nexport const renderQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/question/by_level/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addQuestion-----------//\nexport const addQuestion = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/question`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteQuestionData--------\nexport const deleteQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/question/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editQuestion = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/question/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderStudentData-----------//\nexport const renderStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderStudentDataByOrganization-----------//\nexport const renderStudentDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/student/organization/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// -------addStudent-----------//\nexport const addStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteStudentData--------\nexport const deleteStudentData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/student/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editQuestion---------//\nexport const editStudent = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/student/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n\n// --------renderExamData-----------//\nexport const renderExamData = async () => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderExamDataById\nexport const renderExamDataById = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//renderStudentExamData\nexport const renderStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-student-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//removedStudentExamData\nexport const removedStudentExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/removed-student-from-exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n\n// -------addExam-----------//\nexport const addExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//--------deleteExamData--------\nexport const deleteExamData = async (id) => {\n  try {\n    const response = await axiosInstance.delete(`${BASE_URL}/exam/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//------editExam---------//\nexport const editExam = async (id, data) => {\n  try {\n    const response = await axiosInstance.patch(`${BASE_URL}/exam/${id}`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamDataByOrganization-----------//\nexport const renderExamDataByOrganization = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/by-organization-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// --------renderExamQuestionData-----------//\nexport const renderExamQuestionData = async (id) => {\n  try {\n    const response = await axiosInstance.get(`${BASE_URL}/exam/get-exam-qestion-by-exam-id/${id}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const addStudentToExam = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/add-exam-student`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n//addStudentToExam\nexport const renderNotExitStudent = async (data) => {\n  try {\n    const response = await axiosInstance.post(`${BASE_URL}/exam/organization-student-not-exit`, data)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}","import React, { useState } from 'react';\nimport {\n    CCardGroup,\n    CRow,\n    CWidgetStatsC,\n    CCol\n\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n    cilBasket,\n    cilChartPie,\n    cilPeople,\n    cilSpeech,\n    cilSpeedometer,\n    cilUserFollow,\n    cilClock,\n    cilAvTimer,\n    cilCenterFocus\n} from '@coreui/icons'\n\n\nconst ExamWidget = (prop) => {\n    console.log(\"prop\", prop)\n    const convertDate = (date) => {\n         // Format the date\n         const formattedDate = new Date(date).toLocaleDateString(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\",\n        });\n\n        // Format the time\n        const formattedTime = new Date(date).toLocaleTimeString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n        });\n\n        return `${formattedDate} ${formattedTime}`;\n    }\n    return (\n        <CRow>\n            <CCardGroup className=\"mb-4\">\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilSpeech} height={36} />}\n                        value={prop.data[0]?.exam_name}\n                        title=\"Exam Name\"\n                    // progress={{ color: 'info', value: 75 }}\n                    />\n                </CCol>\n\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilUserFollow} height={36} />}\n                        value={prop.data[0]?.organization_id.name}\n                        title=\"Organization Details\"\n                    // progress={{ color: 'success', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilBasket} height={36} />}\n                        value={prop.data[0]?.level_id.name}\n                        title=\"Level Details\"\n                    // progress={{ color: 'warning', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilChartPie} height={36} />}\n                        value={prop.data[0]?.teacher_id.name}\n                        title=\"Incharge Teacher Name\"\n                    // progress={{ color: 'primary', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilClock} height={36} />}\n                        value={ convertDate(prop.data[0]?.examDateTime) }\n                        title=\"Start Date and Time\"\n                    // progress={{ color: 'danger', value: 75 }}\n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilClock} height={36} />}\n                        value={convertDate(prop.data[0]?.examEndDateTime)}\n                        title=\"Start Date and Time\"\n                    // progress={{ color: 'danger', value: 75 }}\n                    />\n                </CCol>\n               \n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilAvTimer} height={36} />}\n                        value={prop.data[0]?.exam_duration}\n                        title=\"Exam Duration\"\n                  \n                    />\n                </CCol>\n                <CCol md={3} className='mt-md-0 mt-2'>\n                    <CWidgetStatsC\n                        icon={<CIcon icon={cilCenterFocus} height={36} />}\n                        value={prop.data[0]?.total_marks}\n                        title=\"Total Marks\"\n                    \n                    />\n                </CCol>\n            </CCardGroup>\n        </CRow>\n    )\n}\n\nexport default ExamWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { addStudentToExam, renderNotExitStudent, renderStudentDataByOrganization } from \"src/utility/api\";\nimport Cookies from \"js-cookie\";\nimport { useParams } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction AddStudent({ updateData, isExamDone }) {\n\n    const { id } = useParams();\n    const orgId = Cookies.get(\"organizationId\");\n    const [modalOpen, setModalOpen] = useState(false);\n    const [selectedStudents, setSelectedStudents] = useState([]);\n    const [studentsData, setStudentData] = useState([]);\n\n    useEffect(() => {\n        renderStudent()\n\n    }, []);\n\n\n    const renderStudent = async () => {\n        let obj = {\n            \"exam_id\": id,\n            \"org_id\": orgId\n        }\n        const response = await renderNotExitStudent(obj);\n        setStudentData(response.data);\n\n    }\n\n    const toggleModal = () => {\n        setModalOpen(!modalOpen);\n    };\n\n    const handleSelectChange = (selectedOptions) => {\n        setSelectedStudents(selectedOptions.map(option => option.value));\n    };\n\n    const handleSubmit = async (e) => {\n\n        try {\n            e.preventDefault();\n            console.log(\"Selected students:\", selectedStudents);\n            if (selectedStudents.length == 0) {\n                toast.error(\"Please select atleast one student\", {\n                    position: toast.POSITION.TOP_RIGHT,\n                    autoClose: 3000,\n                });\n                return;\n            }\n            selectedStudents.map(async (studentId) => {\n                const obj = {\n                    \"exam_id\": id,\n                    \"student_id\": studentId\n                }\n                await addStudentToExam(obj)\n            })\n\n            toast.success(\"Student added successfully\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000,\n            });\n\n\n            toggleModal();\n            setTimeout(() => {\n                updateData();\n                renderStudent();\n            }, 2000);\n            // await \n\n\n        } catch (err) {\n            toast.error(\"Something went wrong...!\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000,\n            });\n        }\n\n    };\n\n    const options = studentsData.map(student => ({\n        value: student._id,\n        label: `${student.name} - ${student.level_id.name}`\n    }));\n\n    return (\n        <div className=\"container bg-white\">\n            <div className=\"row\">\n                <div className=\"col-6 my-3\">\n                    <h3>Exam Student Info</h3>\n                </div>\n\n                {!isExamDone ? <> <div className=\"col-6 my-3 text-end\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={toggleModal}\n                    >\n                        Add Student\n                    </button>\n                </div></> :null}\n               \n                <hr />\n            </div>\n\n            <Modal show={modalOpen} onHide={toggleModal} backdrop=\"static\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Student</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Select\n                        options={options}\n                        isMulti\n                        closeMenuOnSelect={false}\n                        onChange={handleSelectChange}\n                        value={options.filter(option => selectedStudents.includes(option.value))}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save\n                    </Button>\n                    <Button variant=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    );\n}\n\nexport default AddStudent;\n","\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaDownload, FaPrint } from 'react-icons/fa';\nimport certificate from \"src/assets/own_img/certificate.jpeg\"\nimport jsPDF from 'jspdf';\n\n\nconst CertificateGenerator = ({ data, setIsCertificateModalOpen }) => {\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const imageRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        if (!imageLoaded) return;\n\n        const examDateTime = new Date(data.exam_id.examDateTime);\n        const exam_date = examDateTime.toLocaleDateString(\"en-GB\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n        });\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.drawImage(imageRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.font = '30px Arial';\n        ctx.fillStyle = 'black';\n        ctx.fillText(`${data.student_id.name}`, 528, 650);\n        ctx.fillText(`${data.exam_id.level_id.name}`, 810, 800);\n        ctx.fillText(`${data.exam_id.organization_id.address}`, 940, 910);\n        ctx.fillText(`${exam_date}`, 677, 910);\n    }, [data.student_id.name, imageLoaded]);\n\n    const handleDownload = () => {\n        const link = document.createElement('a');\n        link.download = `certificate_${data.student_id.name}.png`;\n        link.href = canvasRef.current.toDataURL('image/png');\n        link.click();\n    };\n\n    const handlePrint = () => {\n        // Convert canvas image to data URL\n        const dataUrl = canvasRef.current.toDataURL('image/png');\n    \n        // Create a new PDF document\n        const pdf = new jsPDF('p', 'mm', 'a4');\n    \n        // Calculate aspect ratio of the image\n        const img = new Image();\n        img.src = dataUrl;\n        img.onload = function() {\n            const aspectRatio = img.width / img.height;\n            const width = 210; // A4 page width in mm\n            const height = width / aspectRatio;\n    \n            // Calculate padding\n            const padding = 5; // Padding in mm\n            const paddedWidth = width - (padding * 2);\n            const paddedHeight = height - (padding * 2);\n            const x = padding;\n            const y = padding;\n    \n            // Add the image to the PDF document with padding\n            pdf.addImage(dataUrl, 'PNG', x, y, paddedWidth, paddedHeight);\n    \n            // Save the PDF document and open the print dialog\n            pdf.autoPrint(); // Automatically print the document without showing the print dialog\n            pdf.save(`certificate_${data.student_id.name}.pdf`);\n        };\n    };\n    \n    \n\n    return (\n        <div>\n            <Modal\n                show={true}\n                onHide={() => setIsCertificateModalOpen(false)}\n                dialogClassName=\"modal-125w\"\n                contentClassName=\"modal-content-100w\"\n                size=\"xl\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Certificate</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <canvas ref={canvasRef} width=\"100%\" height=\"auto\" style={{ width: \"-webkit-fill-available\" }}></canvas>\n                    <img\n                        ref={imageRef}\n                        src={certificate}\n                        alt=\"Certificate\"\n                        style={{ display: 'none', }}\n                        onLoad={() => {\n                            setImageLoaded(true);\n                            canvasRef.current.width = imageRef.current.naturalWidth;\n                            canvasRef.current.height = imageRef.current.naturalHeight;\n                        }}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" style={{ color: \"white\" }} onClick={handleDownload}><FaDownload /> Download Certificate</Button>\n                    <Button variant=\"primary\" onClick={handlePrint}><FaPrint /> Print Certificate</Button>\n                    <Button variant=\"secondary\" onClick={() => setIsCertificateModalOpen(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CertificateGenerator;\n","import React, { useState, useEffect } from 'react';\nimport { FaEdit, FaTrash, FaEye } from \"react-icons/fa\";\nimport DataTable from '../ownComponent/DataTable';\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n} from \"@coreui/react\";\nimport { useParams } from 'react-router-dom';\nimport ExamWidget from './ExamWidget';\nimport { removedStudentExamData, renderExamDataById, renderExamQuestionData, renderStudentExamData } from 'src/utility/api';\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AddStudent from './AddStudent';\nimport CertificateGenerator from './CertificateGenerator';\n\n\nfunction ExamInfo() {\n  const { id } = useParams();\n\n  const [data, setData] = useState([]);\n  const [isExamDone, setIsExamDone] = useState(false);\n  const [examData, setExamData] = useState([]);\n  const [examQuestionData, setQuestionExamData] = useState([]);\n  const [examDataForPrint, setExamDataForPrint] = useState({});\n  const [isCertificateModalOpen, setIsCertificateModalOpen] = useState(false)\n  // const [isExamDone, setIsExamDone] = useState(false);\n\n\n  useEffect(() => {\n    renderExamData()\n    renderData();\n    // renderQuestionData()\n\n  }, []);\n\n  // render data\n  const renderData = async () => {\n    const response = await renderStudentExamData(id);\n    console.log(response);\n    if (response.success) {\n      setData(response.data);\n    }\n\n  };\n\n  const updateData = async () => {\n    await renderData();\n  };\n\n  //renderExamData\n  const renderExamData = async () => {\n    const response = await renderExamDataById(id);\n    if (response.success) {\n      setExamData(response.data);\n      console.log(\"examData\", examData)\n      //check done or not\n      const startDate = new Date(response.data[0].examDateTime);\n      const endDate = new Date(response.data[0].examEndDateTime);\n      const currentDate = new Date();\n\n      if (currentDate < startDate) {\n        setIsExamDone(false);\n      } else if (currentDate >= startDate && currentDate <= endDate) {\n        // setIsExamDone(true);\n\n      } else {\n        setIsExamDone(true);\n      }\n\n    }\n\n\n\n  };\n\n  //renderQuestionData\n  // const renderQuestionData = async () => {\n  //   const response = await renderExamQuestionData(id); (id);\n  //   if (response.success) {\n  //     setQuestionExamData(response.data);\n  //     console.log(\"setQuestionExamData\", examData)\n  //   }\n\n  // };\n\n  // Delete Student From Exam\n  const handleDelete = async (id) => {\n    const confirmDelete = await Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this student!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\",\n    });\n\n    if (confirmDelete.isConfirmed) {\n      try {\n        const response = await removedStudentExamData(id);\n        if (response.success) {\n          toast.success(response.message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 3000,\n          });\n          renderData();\n        }\n      } catch (error) {\n        toast.error(error.message, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000,\n        });\n      }\n    }\n  };\n\n  //downloadCertificate\n  const downloadCertificate = (rowData) => {\n\n    setExamDataForPrint(rowData)\n    setIsCertificateModalOpen(true)\n  }\n\n  const columns = [\n    { Header: \"Student Name\", accessor: \"student_id.name\" },\n    { Header: \"Mobile Number\", accessor: \"student_id.mobile_number\" },\n    { Header: \"Role Number\", accessor: \"student_id.roll_no\" },\n    { Header: \"Level Name\", accessor: \"exam_id.level_id.name\" },\n    { Header: \"Organization Name\", accessor: \"exam_id.organization_id.name\" },\n    { Header: \"Created Type\", accessor: \"student_id.created_type\" },\n    { Header: \"Exam Marks\", accessor: \"exam_score\", Cell: ({ value }) => (value) },\n    { Header: \"Exam Status\", accessor: \"is_completed\", Cell: ({ value }) => (value ? \"Completed\" : \"Not Attempted\") },\n\n    {\n      Header: \"Actions\",\n      accessor: \"_id\", // Assuming you have an 'id' property in your teacher data\n      Cell: ({ row }) => (\n        <>\n\n\n          {!isExamDone ? <>\n            <CButton\n              color=\"danger\"\n              size=\"sm\"\n              style={{ color: \"white\" }}\n              onClick={() => handleDelete(row.original._id)}\n            >\n              <FaTrash /> Delete\n            </CButton>\n          </> : <>\n\n            {row.original.is_completed ? <>\n              <CButton\n                color=\"success\"\n                size=\"sm\"\n                style={{ color: \"white\" }}\n                onClick={() => downloadCertificate(row.original)}\n              >\n                <FaEye></FaEye> View Certificate\n              </CButton>\n              {/* <CButton\n                color=\"primary\"\n                size=\"sm\"\n                style={{ color: \"white\", margin: \"0 10px\" }}\n                onClick={() => viewAnswerPaper(row.original._id)}\n              >\n                <FaEye /> View Answer Paper\n              </CButton> */}\n            </>\n              : \"-\"}\n\n          </>}\n        </>\n      ),\n    },\n  ];\n\n  const columnsQuestion = [\n    { Header: \"Exam Name\", accessor: \"exam_id.exam_name\" },\n    { Header: \"Question Name\", accessor: \"question_id.question\" },\n    { Header: \"Question Type\", accessor: \"question_id.is_type\" },\n  ];\n\n\n\n\n  return (\n    <div>\n      {\n        isExamDone ? <>\n          <div className='row my-3'>\n            <div className='col-12 text-center'>\n              <h5 className='text-danger'>Examination Time End, Now You Can't Delete User And Question Info.\n                Now You Able Download Certificate. Thank You. </h5>\n            </div>\n          </div>\n        </> : \"\"\n      }\n      <ExamWidget data={examData}></ExamWidget>\n      <AddStudent updateData={updateData} isExamDone={isExamDone} ></AddStudent>\n      <DataTable columns={columns} data={data} />\n      {isCertificateModalOpen ? <CertificateGenerator data={examDataForPrint} setIsCertificateModalOpen={setIsCertificateModalOpen} /> : ''}\n    </div>\n  );\n}\n\nexport default ExamInfo;\n\n","// DataTable.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table'\nimport { Table, FormControl, Button } from 'react-bootstrap'\n// import { useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport './DataTable.css' // Import the CSS file\n\nconst DataTable = ({ columns, data, name }) => {\n  // const [tablePageSize, setTablePageSize] = useState(10)\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    state: { pageIndex, pageSize, globalFilter },\n    setGlobalFilter,\n    gotoPage,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Set initial pageSize to tablePageSize\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  )\n\n  const downloadExcel = () => {\n    const excelData = data.map((row) =>\n      columns.reduce((acc, column) => {\n        acc[column.Header] = row[column.accessor]\n        return acc\n      }, {}),\n    )\n\n    const ws = XLSX.utils.json_to_sheet(excelData)\n    const wb = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1')\n    XLSX.writeFile(wb, 'data.xlsx')\n  }\n\n  return (\n    <div className=\"data-table-container\">\n        <h5>{name?name:\"\"}</h5>\n      <div className=\"data-table-header\">\n        <div className=\"search-box-container\">\n          <FormControl\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search...\"\n          />\n          <span className=\"search-icon\">&#x1F50D;</span>\n        </div>\n        <Button onClick={() => downloadExcel()} className='download_excel' variant=\"success\" style={{ color: 'white' }}>\n          Download Excel\n        </Button>\n      </div>\n      <div className=\"table-wrapper\">\n      <Table {...getTableProps()} bordered hover responsive>\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            {headerGroups.map((headerGroup) => (\n              <React.Fragment key={headerGroup._id}>\n                {headerGroup.headers.map((column) => (\n                  <th key={column._id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\n                  </th>\n                ))}\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={row._id} {...row.getRowProps()}>\n                <td>{pageIndex * pageSize + i + 1}</td>\n                {row.cells.map((cell) => (\n                  <td key={cell.column._id} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </div>\n     \n      <div className=\"pagination-controls\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>\n        <button onClick={() => gotoPage(page.length - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>\n        <span>\n          &nbsp;Page <strong>{pageIndex + 1}</strong>{' '}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nDataTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n}\n\nexport default DataTable\n"],"names":["BASE_URL","axiosInstance","axios","create","baseURL","headers","setAuthorizationHeader","bearerToken","Cookies","get","defaults","common","concat","interceptors","response","use","error","status","window","location","href","Promise","reject","loginUser","async","post","userData","data","success","accessToken","token","set","secure","sameSite","name","teacherData","id","_id","orgId","organization_id","console","log","renderOrganizationData","renderTeacherByOrganization","addTeacher","deleteTeacherData","delete","editTeacher","patch","renderLevelData","renderStudentDataByOrganization","addStudent","deleteStudentData","editStudent","renderExamDataById","renderStudentExamData","removedStudentExamData","deleteExamData","renderExamDataByOrganization","addStudentToExam","renderNotExitStudent","prop","_prop$data$","_prop$data$2","_prop$data$3","_prop$data$4","_prop$data$5","_prop$data$6","_prop$data$7","_prop$data$8","convertDate","date","formattedDate","Date","toLocaleDateString","day","month","year","formattedTime","toLocaleTimeString","hour","minute","hour12","_jsx","CRow","children","_jsxs","CCardGroup","className","CCol","md","CWidgetStatsC","icon","CIcon","cilSpeech","height","value","exam_name","title","cilUserFollow","cilBasket","level_id","cilChartPie","teacher_id","cilClock","examDateTime","examEndDateTime","cilAvTimer","exam_duration","cilCenterFocus","total_marks","_ref","updateData","isExamDone","useParams","modalOpen","setModalOpen","useState","selectedStudents","setSelectedStudents","studentsData","setStudentData","useEffect","renderStudent","obj","toggleModal","options","map","student","label","_Fragment","type","onClick","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","Select","isMulti","closeMenuOnSelect","onChange","selectedOptions","option","filter","includes","Footer","Button","variant","e","preventDefault","length","toast","position","POSITION","TOP_RIGHT","autoClose","studentId","setTimeout","err","setIsCertificateModalOpen","imageLoaded","setImageLoaded","imageRef","useRef","canvasRef","exam_date","exam_id","ctx","current","getContext","clearRect","width","drawImage","font","fillStyle","fillText","student_id","address","dialogClassName","contentClassName","size","centered","ref","style","src","certificate","alt","display","onLoad","naturalWidth","naturalHeight","color","handleDownload","link","document","createElement","download","toDataURL","click","FaDownload","handlePrint","dataUrl","pdf","jsPDF","img","Image","onload","paddedHeight","padding","addImage","autoPrint","save","FaPrint","setData","setIsExamDone","examData","setExamData","examQuestionData","setQuestionExamData","examDataForPrint","setExamDataForPrint","isCertificateModalOpen","renderExamData","renderData","startDate","endDate","currentDate","columns","accessor","Cell","_ref2","_ref3","row","original","is_completed","CButton","downloadCertificate","rowData","FaEye","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","message","handleDelete","FaTrash","ExamWidget","AddStudent","DataTable","CertificateGenerator","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","pageIndex","pageSize","globalFilter","setGlobalFilter","gotoPage","nextPage","previousPage","canNextPage","canPreviousPage","useTable","initialState","useGlobalFilter","useSortBy","usePagination","FormControl","target","placeholder","downloadExcel","excelData","reduce","acc","column","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","Table","bordered","hover","responsive","headerGroup","React","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","disabled"],"sourceRoot":""}